{"version":3,"file":"component---src-pages-index-tsx.js","mappings":"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","sources":["webpack://jono-lane/./src/controllers/githubApi.ts","webpack://jono-lane/./src/pages/index.tsx"],"sourcesContent":["async function authenticateToGitHub() {\n    const clientId = \"f4dd4b030b4403ade3cb\";\n    const clientSecret = \"39f3bf3502df43c59aa044284659bc75449411d2\";\n    const scopes = [\"repo\"];\n  \n    // Step 1: Get the access token\n    const response = await fetch(\n      `/api/github/access_token?client_id=${clientId}&client_secret=${clientSecret}`,\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          grant_type: \"client_credentials\",\n          scope: scopes.join(\" \"),\n        }),\n      }\n    );\n  \n    if (!response.ok) {\n      throw new Error(\"Failed to authenticate with GitHub\");\n    }\n  \n    const data = await response.json();\n    const accessToken = data.access_token;\n  \n    // Step 2: Use the access token to make API requests\n    const repoResponse = await fetch(\"/api/github/user/repos\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n  \n    if (!repoResponse.ok) {\n      throw new Error(\"Failed to fetch repositories\");\n    }\n  \n    const repositories = await repoResponse.json();\n    console.log(repositories);\n  }\n  \n  authenticateToGitHub().catch(console.error);\n\nexport { authenticateToGitHub };\n\n// using personal access token that has a rate limit\n/*\nimport { Octokit } from \"@octokit/rest\";\n\nconst octokit = new Octokit({\n    auth: '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',\n});\n\nasync function getRepositories() {\n    const response = await octokit.repos.listForAuthenticatedUser();\n    return response.data;\n}\n\nexport { getRepositories };\n*/","// import * as React from \"react\"\n/*\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport React, { useEffect, useState } from \"react\";\nimport { authenticateToGitHub } from \"../controllers/githubApi\";\n\ninterface Repository {\n  id: number;\n  node_id: string;\n  name: string;\n  full_name: string;\n  license: {\n    key: string;\n    name: string;\n    url: string | null;\n    spdx_id: string | null;\n    node_id: string;\n    html_url?: string | undefined;\n  } | null;\n    description: string | null;\n}\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  useEffect(() => {\n    authenticateToGitHub().catch(console.error);\n  }, []);\n\n  return (\n    <main className=\"flex items-center justify-center h-screen bg-black\">\n      <div className=\"max-w-md mx-auto p-4\">\n        {repositories.map((repo) => (\n          <div key={repo.id} className=\"mb-4\">\n            <h3 className=\"text-white text-xl font-bold\">{repo.name}</h3>\n            <p className=\"text-gray-300\">{repo.description}</p>\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Jono Lane</title>;\n*/\n\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport React, { useEffect, useState } from \"react\";\nimport { authenticateToGitHub } from \"../controllers/githubApi\";\n\ninterface Repository {\n  id: number;\n  node_id: string;\n  name: string;\n  full_name: string;\n  license: {\n    key: string;\n    name: string;\n    url: string | null;\n    spdx_id: string | null;\n    node_id: string;\n    html_url?: string | undefined;\n  } | null;\n  description: string | null;\n}\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const repos = await authenticateToGitHub();\n        if (repos !== undefined && repos !== null) {\n          setRepositories(repos);\n        }\n      } catch (error) {\n        console.error(\"Error fetching repositories:\", error);\n      }\n    };\n  \n    fetchData();\n  }, []);\n\n  return (\n    <main className=\"flex items-center justify-center h-screen bg-black\">\n      <div className=\"max-w-md mx-auto p-4\">\n        {repositories.map((repo) => (\n          <div key={repo.id} className=\"mb-4\">\n            <h3 className=\"text-white text-xl font-bold\">{repo.name}</h3>\n            <p className=\"text-gray-300\">{repo.description}</p>\n            {/* Add more details or styling as needed */}\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Jono Lane</title>;"],"names":["authenticateToGitHub","clientId","clientSecret","scopes","response","fetch","method","headers","Accept","body","JSON","stringify","grant_type","scope","join","ok","Error","data","json","accessToken","access_token","repoResponse","Authorization","repositories","console","log","catch","error","React","useEffect","useState","IndexPage","setRepositories","fetchData","repos","undefined","className","map","repo","key","id","name","description","Head"],"sourceRoot":""}