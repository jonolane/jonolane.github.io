{"version":3,"file":"component---src-pages-index-tsx-7e78fb08f0bc8b3878c5.js","mappings":"gMAgBA,MATkCA,IAA4B,IAA3B,KAAEC,EAAI,YAAEC,GAAa,EACtD,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qDACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,gCAAgCH,GAC9CE,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,cAAcF,GACvB,ECqCV,MA5BuC,KACrC,MAAM,EAACG,EAAY,EAAEC,IAAmBC,EAAAA,EAAAA,UAAuB,IAgB/D,OAdAC,EAAAA,EAAAA,YAAU,KACgBC,WACtB,IACE,MAAMJ,QC3BPI,iBACH,MAAMC,QAAqBC,MAAM,oCAAqC,CACpEC,QAAS,CACPC,cAAgB,UAASC,CAAAA,EAAYC,gBAIzC,IAAKL,EAAaM,GAChB,MAAM,IAAIC,MAAM,gCAIlB,aAD2BP,EAAaQ,MAE1C,CDciCC,GAC3Bb,EAAgBD,GAChBe,QAAQC,IAAIhB,EACd,CAAE,MAAOiB,GACPF,QAAQE,MAAMA,EAChB,GAGFC,EAAiB,GAChB,IAGDpB,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,sDACdD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,oEACZC,EAAamB,KAAKC,GACjBtB,EAAAA,cAACuB,EAAI,CAACC,IAAKF,EAAKG,GAAI3B,KAAMwB,EAAKxB,KAAMC,YAAauB,EAAKvB,iBAGtD,EAMJ,MAAM2B,EAAe,IAAM1B,EAAAA,cAAAA,QAAAA,KAAO,Y","sources":["webpack://jono-lane/./src/components/Card.tsx","webpack://jono-lane/./src/pages/index.tsx","webpack://jono-lane/./src/controllers/githubApi.ts"],"sourcesContent":["import React from \"react\";\n\ninterface CardProps {\n  name: string;\n  description: string | null;\n}\n\nconst Card: React.FC<CardProps> = ({ name, description }) => {\n  return (\n    <div className=\"border border-solid rounded-lg shadow-md p-4 mb-4\">\n      <h3 className=\"text-xl font-bold text-white\">{name}</h3>\n      <p className=\"text-white\">{description}</p>\n    </div>\n  );\n};\n\nexport default Card;","import type { HeadFC, PageProps } from \"gatsby\"\nimport React, { useEffect, useState } from \"react\";\nimport { fetchRepositories } from \"../controllers/githubApi\";\nimport Card from \"../components/Card\";\n\ninterface Repository {\n  id: number;\n  node_id: string;\n  name: string;\n  full_name: string;\n  license: {\n    key: string;\n    name: string;\n    url: string | null;\n    spdx_id: string | null;\n    node_id: string;\n    html_url?: string | undefined;\n  } | null;\n  description: string | null;\n}\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  useEffect(() => {\n    const getRepositories = async () => {\n      try {\n        const repositories = await fetchRepositories();\n        setRepositories(repositories);\n        console.log(repositories);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getRepositories();\n  }, []);\n\n  return (\n    <main className=\"flex flex-col items-center justify-center bg-black\">\n      <div className=\"mx-auto p-4 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {repositories.map((repo) => (\n          <Card key={repo.id} name={repo.name} description={repo.description} />\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Jono Lane</title>;","export async function fetchRepositories() {  \n    const repoResponse = await fetch(\"https://api.github.com/user/repos\", {\n      headers: {\n        Authorization: `Bearer ${process.env.JONO_TOKEN}`,\n      },\n    });\n  \n    if (!repoResponse.ok) {\n      throw new Error(\"Failed to fetch repositories\");\n    }\n  \n    const repositories = await repoResponse.json();\n    return repositories;\n  }"],"names":["_ref","name","description","React","className","repositories","setRepositories","useState","useEffect","async","repoResponse","fetch","headers","Authorization","process","JONO_TOKEN","ok","Error","json","fetchRepositories","console","log","error","getRepositories","map","repo","Card","key","id","Head"],"sourceRoot":""}