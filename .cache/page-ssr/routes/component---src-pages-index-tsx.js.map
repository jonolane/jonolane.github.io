{"version":3,"file":"component---src-pages-index-tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA,KAAMC,QAAO,CAAG,GAAID,CAAAA,uBAAO,CAAC,CACxBE,IAAI,CAAE,0CACV,CAAC,CAAC,CAEF,cAAeC,gBAAe,EAAG,CAC7B,KAAMC,SAAQ,CAAG,KAAMH,QAAO,CAACI,KAAK,CAACC,wBAAwB,EAAE,CAC/D,MAAOF,SAAQ,CAACG,IAAI,CACxB;;ACTA;;AAEmD;AACQ;AAkB3D,MAAMI,SAA8B,GAAG,MAAM;EAC3C,MAAM;IAAA,GAACC,YAAY;IAAA,GAAEC;EAAe,IAAIH,sBAAQ,CAAe,EAAE,CAAC;EAElED,uBAAS,CAAC,MAAM;IACd,MAAMK,iBAAiB,GAAG,YAAY;MACpC,MAAMT,KAAK,GAAG,MAAMF,eAAe,EAAE;MACrCU,eAAe,CAACR,KAAK,CAAC;MACtBU,OAAO,CAACC,GAAG,CAACX,KAAK,CAAC;IACpB,CAAC;IAEDS,iBAAiB,EAAE;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,gCAAAA;IAAMS,SAAS,EAAC;EAAoD,gBAClET,gCAAAA;IAAKS,SAAS,EAAC;EAAsB,GAClCL,YAAY,CAACM,GAAG,CAAEC,IAAI,iBACrBX,gCAAAA;IAAKY,GAAG,EAAED,IAAI,CAACE,EAAG;IAACJ,SAAS,EAAC;EAAM,gBACjCT,gCAAAA;IAAIS,SAAS,EAAC;EAA8B,GAAEE,IAAI,CAACG,IAAI,CAAM,eAC7Dd,gCAAAA;IAAGS,SAAS,EAAC;EAAe,GAAEE,IAAI,CAACI,WAAW,CAAK,CAGtD,CAAC,CACE,CACD;AAEX,CAAC;AAED,4CAAeZ,SAAS,EAAC;AAElB,MAAMa,IAAY,GAAG,mBAAMhB,gCAAAA,gBAAO,WAAS,CAAQ","sources":["webpack://jono-lane/./src/controllers/githubApi.ts","webpack://jono-lane/./src/pages/index.tsx"],"sourcesContent":["import { Octokit } from \"@octokit/rest\";\n\nconst octokit = new Octokit({\n    auth: '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',\n});\n\nasync function getRepositories() {\n    const response = await octokit.repos.listForAuthenticatedUser();\n    return response.data;\n}\n\nexport { getRepositories };","// import * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport React, { useEffect, useState } from \"react\";\nimport { getRepositories } from \"../controllers/githubApi\";\n\ninterface Repository {\n  id: number;\n  node_id: string;\n  name: string;\n  full_name: string;\n  license: {\n    key: string;\n    name: string;\n    url: string | null;\n    spdx_id: string | null;\n    node_id: string;\n    html_url?: string | undefined;\n  } | null;\n    description: string | null;\n}\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  useEffect(() => {\n    const fetchRepositories = async () => {\n      const repos = await getRepositories();\n      setRepositories(repos);\n      console.log(repos);\n    };\n\n    fetchRepositories();\n  }, []);\n\n  return (\n    <main className=\"flex items-center justify-center h-screen bg-black\">\n      <div className=\"max-w-md mx-auto p-4\">\n        {repositories.map((repo) => (\n          <div key={repo.id} className=\"mb-4\">\n            <h3 className=\"text-white text-xl font-bold\">{repo.name}</h3>\n            <p className=\"text-gray-300\">{repo.description}</p>\n            {/* Add more details or styling as needed */}\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Jono Lane</title>;\n"],"names":["Octokit","octokit","auth","getRepositories","response","repos","listForAuthenticatedUser","data","React","useEffect","useState","IndexPage","repositories","setRepositories","fetchRepositories","console","log","className","map","repo","key","id","name","description","Head"],"sourceRoot":""}