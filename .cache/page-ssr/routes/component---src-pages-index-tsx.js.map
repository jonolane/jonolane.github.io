{"version":3,"file":"component---src-pages-index-tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAwC;AACoD;AAE5F,eAAeE,oBAAoB,GAAG;EACpC,MAAMC,IAAI,GAAGF,sCAAkB,CAAC;IAC9BG,QAAQ,EAAE,sBAAsB;IAChCC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAG,MAAMH,IAAI,CAAC;IAChCI,IAAI,EAAE,YAAY;IAClBC,cAAc,EAAE,MAAM;MACpB;IAAA;EAEJ,CAAC,CAAkC;EAEnCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAExC,MAAMC,OAAO,GAAG,IAAIX,uBAAO,CAAC;IAC1BG,IAAI,EAAEG,cAAc,CAACM;EACvB,CAAC,CAAC;;EAEF;EACA,MAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACG,KAAK,CAACC,wBAAwB,EAAE;EAC/DN,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACG,IAAI,CAAC;AAC5B;AAEAd,oBAAoB,EAAE,CAACe,KAAK,CAACR,OAAO,CAACS,KAAK,CAAC;AAEX;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGmD;AACa;AAkBhE,MAAMI,SAA8B,GAAG,MAAM;EAC3C,MAAM;IAAA,GAACC,YAAY;IAAA,GAAEC;EAAe,IAAIH,sBAAQ,CAAe,EAAE,CAAC;EAElED,uBAAS,CAAC,MAAM;IACd,MAAMK,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMX,KAAK,GAAG,MAAMZ,oBAAoB,EAAE;QAC1C,IAAIY,KAAK,KAAKY,SAAS,IAAIZ,KAAK,KAAK,IAAI,EAAE;UACzCU,eAAe,CAACV,KAAK,CAAC;QACxB;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDO,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,gCAAAA;IAAMQ,SAAS,EAAC;EAAoD,gBAClER,gCAAAA;IAAKQ,SAAS,EAAC;EAAsB,GAClCJ,YAAY,CAACK,GAAG,CAAEC,IAAI,iBACrBV,gCAAAA;IAAKW,GAAG,EAAED,IAAI,CAACE,EAAG;IAACJ,SAAS,EAAC;EAAM,gBACjCR,gCAAAA;IAAIQ,SAAS,EAAC;EAA8B,GAAEE,IAAI,CAACG,IAAI,CAAM,eAC7Db,gCAAAA;IAAGQ,SAAS,EAAC;EAAe,GAAEE,IAAI,CAACI,WAAW,CAAK,CAGtD,CAAC,CACE,CACD;AAEX,CAAC;AAED,4CAAeX,SAAS,EAAC;AAElB,MAAMY,IAAY,GAAG,mBAAMf,gCAAAA,gBAAO,WAAS,CAAQ","sources":["webpack://jono-lane/./src/controllers/githubApi.ts","webpack://jono-lane/./src/pages/index.tsx"],"sourcesContent":["import { Octokit } from \"@octokit/rest\";\nimport { createOAuthAppAuth, OAuthAppDeviceFlowAuthOptions } from \"@octokit/auth-oauth-app\";\n\nasync function authenticateToGitHub() {\n  const auth = createOAuthAppAuth({\n    clientId: \"f4dd4b030b4403ade3cb\",\n    clientSecret: \"39f3bf3502df43c59aa044284659bc75449411d2\",\n  });\n\n  const authentication = await auth({\n    type: \"oauth-user\",\n    onVerification: () => {\n      // Handle the verification process here if needed\n    },\n  } as OAuthAppDeviceFlowAuthOptions);\n\n  console.log(\"Authentication successful\");\n\n  const octokit = new Octokit({\n    auth: authentication.token,\n  });\n\n  // Use the authenticated Octokit instance to make API requests\n  const response = await octokit.repos.listForAuthenticatedUser();\n  console.log(response.data);\n}\n\nauthenticateToGitHub().catch(console.error);\n\nexport { authenticateToGitHub };\n\n// using personal access token that has a rate limit\n/*\nimport { Octokit } from \"@octokit/rest\";\n\nconst octokit = new Octokit({\n    auth: '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',\n});\n\nasync function getRepositories() {\n    const response = await octokit.repos.listForAuthenticatedUser();\n    return response.data;\n}\n\nexport { getRepositories };\n*/","// import * as React from \"react\"\n/*\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport React, { useEffect, useState } from \"react\";\nimport { authenticateToGitHub } from \"../controllers/githubApi\";\n\ninterface Repository {\n  id: number;\n  node_id: string;\n  name: string;\n  full_name: string;\n  license: {\n    key: string;\n    name: string;\n    url: string | null;\n    spdx_id: string | null;\n    node_id: string;\n    html_url?: string | undefined;\n  } | null;\n    description: string | null;\n}\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  useEffect(() => {\n    authenticateToGitHub().catch(console.error);\n  }, []);\n\n  return (\n    <main className=\"flex items-center justify-center h-screen bg-black\">\n      <div className=\"max-w-md mx-auto p-4\">\n        {repositories.map((repo) => (\n          <div key={repo.id} className=\"mb-4\">\n            <h3 className=\"text-white text-xl font-bold\">{repo.name}</h3>\n            <p className=\"text-gray-300\">{repo.description}</p>\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Jono Lane</title>;\n*/\n\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport React, { useEffect, useState } from \"react\";\nimport { authenticateToGitHub } from \"../controllers/githubApi\";\n\ninterface Repository {\n  id: number;\n  node_id: string;\n  name: string;\n  full_name: string;\n  license: {\n    key: string;\n    name: string;\n    url: string | null;\n    spdx_id: string | null;\n    node_id: string;\n    html_url?: string | undefined;\n  } | null;\n  description: string | null;\n}\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const repos = await authenticateToGitHub();\n        if (repos !== undefined && repos !== null) {\n          setRepositories(repos);\n        }\n      } catch (error) {\n        console.error(\"Error fetching repositories:\", error);\n      }\n    };\n  \n    fetchData();\n  }, []);\n\n  return (\n    <main className=\"flex items-center justify-center h-screen bg-black\">\n      <div className=\"max-w-md mx-auto p-4\">\n        {repositories.map((repo) => (\n          <div key={repo.id} className=\"mb-4\">\n            <h3 className=\"text-white text-xl font-bold\">{repo.name}</h3>\n            <p className=\"text-gray-300\">{repo.description}</p>\n            {/* Add more details or styling as needed */}\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Jono Lane</title>;"],"names":["Octokit","createOAuthAppAuth","authenticateToGitHub","auth","clientId","clientSecret","authentication","type","onVerification","console","log","octokit","token","response","repos","listForAuthenticatedUser","data","catch","error","React","useEffect","useState","IndexPage","repositories","setRepositories","fetchData","undefined","className","map","repo","key","id","name","description","Head"],"sourceRoot":""}